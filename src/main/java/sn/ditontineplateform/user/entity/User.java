package sn.ditontineplateform.user.entity;import jakarta.persistence.Column;import jakarta.persistence.Embedded;import jakarta.persistence.Entity;import jakarta.persistence.EntityListeners;import jakarta.persistence.GeneratedValue;import jakarta.persistence.Id;import jakarta.persistence.Table;import lombok.Getter;import lombok.NoArgsConstructor;import lombok.Setter;import org.hibernate.annotations.GenericGenerator;import org.hibernate.annotations.JdbcTypeCode;import org.hibernate.type.SqlTypes;import org.springframework.data.annotation.CreatedDate;import org.springframework.data.annotation.LastModifiedDate;import org.springframework.data.jpa.domain.support.AuditingEntityListener;import java.io.Serializable;import java.time.Instant;import java.time.LocalDate;import java.util.UUID;@Entity@Table(name = "utilisateur", schema = "ditontine_app")@Getter@Setter@NoArgsConstructor@EntityListeners(AuditingEntityListener.class)public class User implements Serializable {    @Id    @GeneratedValue(generator = "uuid")    @GenericGenerator(name = "uuid", strategy = "uuid2")    @Column(name = "user_id", nullable = false, updatable = false)    private UUID userId;    @Column(name = "first_name", nullable = false)    private String firstName;    @Column(name = "last_name", nullable = false)    private String lastName;    @Column(name = "email", unique = true)    private String email;    @Column(name = "external_id", unique = true)    private String externalId;    @Column(name = "phone_number", nullable = false, unique = true)    private String phoneNumber;    @Column(name = "gender", nullable = false)    private String gender;    @Column(name = "date_of_birth")    private LocalDate dateOfBirth;    @Column(name = "roles", columnDefinition = "text[]")    @JdbcTypeCode(SqlTypes.ARRAY)    private String[] roles;    @Column(name = "is_active")    private boolean isActive = true;    @Column(name = "is_email_verified")    private boolean isEmailVerified = false;    @Column(name = "is_phone_verified")    private boolean isPhoneVerified = false;    @Column(name = "photo_url")    private String photoUrl;    @Embedded    private Location location;    @CreatedDate    @Column(name = "created_at", updatable = false)    private Instant createdAt;    @LastModifiedDate    @Column(name = "updated_at")    private Instant updatedAt;    @Column(name = "deleted_at")    private Instant deletedAt;    @Column(name = "last_login")    private Instant lastLogin;}